{"version":3,"sources":["Components/Favorite.jsx","Components/Nav.jsx","Components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Favorite","favorites","created","className","map","person","index","key","name","eye_color","hair_color","gender","character","alias","skill","skin","src","img","alt","Nav","useState","showFav","setFav","onClick","role","aria-label","Header","App","apiData","setApiData","searchValue","setSearchValue","filteredValue","setFiltered","apiFavorite","setApiFav","setCreated","createdFavorite","setCreatedFav","success","setSuccess","handleChange","e","currentTarget","value","useEffect","filter","element","toLowerCase","includes","birth_year","getPersons","i","a","axios","get","response","array","result","concat","data","results","loopFunction","type","required","placeholder","onChange","target","onSubmit","preventDefault","console","log","reset","id","accept","event","image","files","reader","FileReader","readAsDataURL","onload","imageCode","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fdd44c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../favorite.css\";\r\n\r\nfunction Favorite({ favorites, created }) {\r\n\treturn (\r\n\t\t<div className=\"favorite-wrapper\">\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Star wars favorites</h1>\r\n\t\t\t\t<div className=\"fav-wrapper\">\r\n\t\t\t\t\t{favorites.map((person, index) => (\r\n\t\t\t\t\t\t<div className=\"fav-style\" key={index}>\r\n\t\t\t\t\t\t\t<h2>{person.name}</h2>\r\n\t\t\t\t\t\t\tEye color: {person.eye_color} <br />\r\n\t\t\t\t\t\t\tHair color: {person.hair_color}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tGender: {person.gender}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h1>Created favorites</h1>\r\n\t\t\t<div className=\"fav-wrapper\">\r\n\t\t\t\t{created.map((character) => (\r\n\t\t\t\t\t<div className=\"fav-style\" key={character.alias}>\r\n\t\t\t\t\t\t<h2>{character.alias}</h2>\r\n\t\t\t\t\t\tSpecial skill: {character.skill} <br />\r\n\t\t\t\t\t\tSkin texture: {character.skin}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<img src={character.img} alt=\"created character\" />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useState } from \"react\";\r\nimport Favorite from \"./Favorite\";\r\nimport \"../nav.css\";\r\n\r\nfunction Nav({ favorites, created }) {\r\n\tconst [showFav, setFav] = useState(false);\r\n\tfunction showFavoriteComponent() {\r\n\t\tsetFav(true);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"nav-component\">\r\n\t\t\t\t<button onClick={showFavoriteComponent}>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t\t<span role=\"img\" aria-label=\"heart\">\r\n\t\t\t\t\t\t❤️\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{showFav ? <Favorite favorites={favorites} created={created} /> : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport \"../header.css\";\r\n\r\nconst Header = ({ favorites, created }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"header-style\">Star Wars API</h1>\r\n\t\t\t<Nav favorites={favorites} created={created} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Components/Header\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n\tconst [apiData, setApiData] = useState([]); //Alla personer från api:et\r\n\tconst [searchValue, setSearchValue] = useState(\"\"); //Sökvärde\r\n\tconst [filteredValue, setFiltered] = useState([]); //Värdet efter man sökt\r\n\tconst [apiFavorite, setApiFav] = useState([]); //Star wars-favoriterna\r\n\tconst [created, setCreated] = useState({\r\n\t\talias: \"\",\r\n\t\tskill: \"\",\r\n\t\tskin: \"\",\r\n\t\timg: \"\",\r\n\t});\r\n\t//Egna favoriter\r\n\tconst [createdFavorite, setCreatedFav] = useState([]); //En array med alla egna favoriter\r\n\tconst [success, setSuccess] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFiltered(\r\n\t\t\tapiData.filter(\r\n\t\t\t\t(element) =>\r\n\t\t\t\t\telement.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n\t\t\t\t\telement.eye_color.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n\t\t\t\t\telement.hair_color\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(searchValue.toLowerCase()) ||\r\n\t\t\t\t\telement.birth_year.toLowerCase().includes(searchValue.toLowerCase())\r\n\t\t\t)\r\n\t\t);\r\n\t}, [searchValue, apiData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getPersons(i) {\r\n\t\t\tlet url = \"https://swapi.dev/api/people/?page=\";\r\n\t\t\tconst response = await axios.get(url + i);\r\n\t\t\treturn await response;\r\n\t\t}\r\n\r\n\t\tasync function loopFunction() {\r\n\t\t\tlet array = [];\r\n\t\t\tfor (let i = 1; i <= 9; i++) {\r\n\t\t\t\tconst result = await getPersons(i); //result får värdet av vad getPersons returnerar med i som parameter\r\n\t\t\t\tarray = array.concat(result.data.results); //array får all data från anropet x9\r\n\t\t\t}\r\n\t\t\tsetApiData(array);\r\n\t\t}\r\n\t\tloopFunction();\r\n\t}, []);\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tsetSuccess(true);\r\n\t\tsetCreatedFav([...createdFavorite, created]);\r\n\t\tconsole.log(\"Värdet av input\", created);\r\n\t\te.target.reset();\r\n\t}\r\n\tfunction handleChange(e) {\r\n\t\tsetCreated({ ...created, [e.currentTarget.name]: e.currentTarget.value });\r\n\t}\r\n\tconst setImg = (event) => {\r\n\t\tlet image = event.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(image);\r\n\t\treader.onload = function () {\r\n\t\t\tconst imageCode = reader.result;\r\n\t\t\tsetCreated({ ...created, img: imageCode });\r\n\t\t};\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<Header favorites={apiFavorite} created={createdFavorite} />\r\n\t\t\t</header>\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<h2 className=\"input-h2\">\r\n\t\t\t\t\tSearch for a Star Wars character by name, eye color, hair color or\r\n\t\t\t\t\tgender\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"search-component-input\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<h3 className=\"style-h3\">Or create your own character!</h3>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"input-style\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"alias\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"input-style\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Special skill\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"skill\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"input-style\"\r\n\t\t\t\t\t\tplaceholder=\"Skin texture\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"skin\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"add-image\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"image\"\r\n\t\t\t\t\t\taccept=\".png, .jpeg, .jpg\"\r\n\t\t\t\t\t\tonChange={setImg}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input type=\"submit\" className=\"add-button\" value=\"Add\" />\r\n\t\t\t\t\t{success ? <h4>Successfully uploaded to Favorites!</h4> : null}\r\n\t\t\t\t</form>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br></br>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"search-wrapper\">\r\n\t\t\t\t{filteredValue.map((person) => (\r\n\t\t\t\t\t<div key={person.name}>\r\n\t\t\t\t\t\t<h2>{person.name}</h2>\r\n\t\t\t\t\t\tEye color: {person.eye_color} <br />\r\n\t\t\t\t\t\tHair color: {person.hair_color}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tGender: {person.gender}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p>Add to favorite</p>\r\n\t\t\t\t\t\t<button onClick={() => setApiFav([...apiFavorite, person])}>\r\n\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"heart\">\r\n\t\t\t\t\t\t\t\t❤️\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}